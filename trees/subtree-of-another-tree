/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool proper(TreeNode* root, TreeNode* subRoot){
        if((root==NULL)&(subRoot==NULL))return true;
        if((root==NULL)&(subRoot!=NULL))return false;
        if((root!=NULL)&(subRoot==NULL))return false;
        if(proper(root->left,subRoot->left)&&proper(root->right,subRoot->right)&&root->val==subRoot->val)return true;
        return false;
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if((root==NULL)&(subRoot==NULL))return true;
        if((root==NULL)&(subRoot!=NULL))return false;
        if((root!=NULL)&(subRoot==NULL))return false;
        if(proper(root,subRoot))return true;
        if(isSubtree(root->left,subRoot)||isSubtree(root->right,subRoot))return true;
        return false;
    }
};
